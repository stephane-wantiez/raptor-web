<?php

namespace raptorWeb\model;

class User extends ActiveRecord
{
    const LOGIN_MIN_LENGTH = 3;
    const PASS_MIN_LENGTH = 3;
    
    // persistent data
	public $id; // generated by DB
	public $facebookId;
	public $userName;
	public $password;
	public $firstName;
	public $lastName;
	public $email;
	
	// transient data
	public $friends;
	
	public function User($id=0,$facebookId=0,$userName="",$password="",$firstName="",$lastName="",$email="")
	{
		parent::ActiveRecord('user',$id);
		$this->fillWithData($id,$facebookId,$userName,$password,$firstName,$lastName,$email);
	}
	
	protected function createRecord()
	{
		return new User();
	}
	
	public function fillWithData($id=0,$facebookId=0,$userName="",$password="",$firstName="",$lastName="",$email="")
	{
		$this->id = (int) $id;
		$this->facebookId = (int) $facebookId;
		$this->userName = $userName;
		$this->password = $password;
		$this->firstName = $firstName;
		$this->lastName = $lastName;
		$this->email = $email;
		$this->friends = [];
	}
	
	public function fillWithDbTuple($userData)
	{
		$this->fillWithData($userData['id'],$userData['facebookId'],$userData['userName'],$userData['password'],$userData['firstName'],$userData['lastName'],$userData['email']);
	}
	
	protected function getDbParamsForModification()
	{
		return [ 'facebookId' => $this->facebookId,
		         'userName'   => $this->userName,
		         'firstName'  => $this->firstName,
		         'lastName'   => $this->lastName,
		         'email'      => $this->email ];
	}
	
	protected function getDbParamsForReading()
	{
		return [ 'userName'   => $this->userName,
				 'facebookId' => $this->facebookId,
				 'email'      => $this->email ];
	}
	
	public function toJSON()
	{
		return json_encode([
			'id'      => $this->id,
			'name'    => $this->userName,
			'friends' => $this->friends
		]);
	}
	
	public function setFriendsFromFacebookIds($friendsFacebookId)
	{
		foreach ( $friendsFacebookId as $friendFacebookId )
		{
			$friendUser = new User();
			$friendUserFound = $friendUser->read([ 'facebookId' => $friendFacebookId ]);
			
			if ($friendUserFound)
			{
				$this->friends[$friendFacebookId] = $friendUser;
			}
			else
			{
				$this->friends[$friendFacebookId] = null;
			}
		}
	}
}